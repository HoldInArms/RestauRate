## YAML Template.
# Database settings.
database:

  driverClass: net.sourceforge.jtds.jdbc.Driver
  user: sa
  password: password
  url: jdbc:jtds:sqlserver://localhost:1433;databaseName=restaurant_rate;
  
  
# HTTP-specific options.

http:

  # The port on which the HTTP server listens for service requests.
  port: 9200

  # The port on which the HTTP server listens for administrative requests.
  adminPort: 9201

  # Maximum number of threads.
  maxThreads: 100

  # Minimum number of thread to keep alive.
  minThreads: 10
  
  #
  #connectorType: nonblockling+ssl
  
  # For secury connection
  #ssl:
      # Path of the ssl key
      #keyStore: ./path/of/key.jks
      
      #Password for the ssl key
      #keyStorePassword: password

  # HTTP request log settings
  requestLog:
    # Settings for logging to stdout.
    console:
      # If true, write log statements to stdout.
      enabled: true

    # Settings for logging to a file.
    file:
      # If true, write log statements to a file.
      enabled: true

      # The file to which statements will be logged.
      currentLogFilename: /var/log/holdinarms/restaurate-requests.log

      #  When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
      # example.log will be truncated, and new statements written to it.
      archivedLogFilenamePattern: /var/log/holdinarms/restaurate-requests-%d.log.gz

      # The maximum number of log files to archive.
      archivedFileCount: 5

    # Settings for logging to syslog.
    syslog:

      # If true, write log statements to syslog.
      enabled: false

      # The hostname of the syslog server to which statements will be sent.
      # N.B.: If this is the local host, the local syslog instance will need to be configured to
      # listen on an inet socket, not just a Unix socket.
      host: localhost

      # The syslog facility to which statements will be sent.
      facility: local0

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: DEBUG

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.holdinarms: DEBUG

    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE


  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: true

    # Do not write log statements below this threshold to the file.
    threshold: ALL

    # The file to which current statements will be logged.
    currentLogFilename: /var/log/holdinarms/restaurate_api.log

    # When the log file rotates, the archived log will be renamed to this and gzipped. The
    # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
    # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
    archivedLogFilenamePattern: /var/log/holdinarms/restaurate_api-%d.log.gz

    # The maximum number of log files to archive.
    archivedFileCount: 5

  # Settings for logging to syslog.
  syslog:

    # If true, write log statements to syslog.
    enabled: false

    # The hostname of the syslog server to which statements will be sent.
    # N.B.: If this is the local host, the local syslog instance will need to be configured to
    # listen on an inet socket, not just a Unix socket.
    host: localhost

    # The syslog facility to which statements will be sent.
    facility: local0

